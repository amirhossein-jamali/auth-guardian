// Code generated by mockery. DO NOT EDIT.

package metrics

import mock "github.com/stretchr/testify/mock"

// MockMetricsRecorder is an autogenerated mock type for the MetricsRecorder type
type MockMetricsRecorder struct {
	mock.Mock
}

type MockMetricsRecorder_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetricsRecorder) EXPECT() *MockMetricsRecorder_Expecter {
	return &MockMetricsRecorder_Expecter{mock: &_m.Mock}
}

// IncCounter provides a mock function with given fields: name, tags
func (_m *MockMetricsRecorder) IncCounter(name string, tags map[string]string) {
	_m.Called(name, tags)
}

// MockMetricsRecorder_IncCounter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncCounter'
type MockMetricsRecorder_IncCounter_Call struct {
	*mock.Call
}

// IncCounter is a helper method to define mock.On call
//   - name string
//   - tags map[string]string
func (_e *MockMetricsRecorder_Expecter) IncCounter(name interface{}, tags interface{}) *MockMetricsRecorder_IncCounter_Call {
	return &MockMetricsRecorder_IncCounter_Call{Call: _e.mock.On("IncCounter", name, tags)}
}

func (_c *MockMetricsRecorder_IncCounter_Call) Run(run func(name string, tags map[string]string)) *MockMetricsRecorder_IncCounter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(map[string]string))
	})
	return _c
}

func (_c *MockMetricsRecorder_IncCounter_Call) Return() *MockMetricsRecorder_IncCounter_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetricsRecorder_IncCounter_Call) RunAndReturn(run func(string, map[string]string)) *MockMetricsRecorder_IncCounter_Call {
	_c.Run(run)
	return _c
}

// ObserveHistogram provides a mock function with given fields: name, value, tags
func (_m *MockMetricsRecorder) ObserveHistogram(name string, value float64, tags map[string]string) {
	_m.Called(name, value, tags)
}

// MockMetricsRecorder_ObserveHistogram_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveHistogram'
type MockMetricsRecorder_ObserveHistogram_Call struct {
	*mock.Call
}

// ObserveHistogram is a helper method to define mock.On call
//   - name string
//   - value float64
//   - tags map[string]string
func (_e *MockMetricsRecorder_Expecter) ObserveHistogram(name interface{}, value interface{}, tags interface{}) *MockMetricsRecorder_ObserveHistogram_Call {
	return &MockMetricsRecorder_ObserveHistogram_Call{Call: _e.mock.On("ObserveHistogram", name, value, tags)}
}

func (_c *MockMetricsRecorder_ObserveHistogram_Call) Run(run func(name string, value float64, tags map[string]string)) *MockMetricsRecorder_ObserveHistogram_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(float64), args[2].(map[string]string))
	})
	return _c
}

func (_c *MockMetricsRecorder_ObserveHistogram_Call) Return() *MockMetricsRecorder_ObserveHistogram_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetricsRecorder_ObserveHistogram_Call) RunAndReturn(run func(string, float64, map[string]string)) *MockMetricsRecorder_ObserveHistogram_Call {
	_c.Run(run)
	return _c
}

// SetGauge provides a mock function with given fields: name, value, tags
func (_m *MockMetricsRecorder) SetGauge(name string, value float64, tags map[string]string) {
	_m.Called(name, value, tags)
}

// MockMetricsRecorder_SetGauge_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGauge'
type MockMetricsRecorder_SetGauge_Call struct {
	*mock.Call
}

// SetGauge is a helper method to define mock.On call
//   - name string
//   - value float64
//   - tags map[string]string
func (_e *MockMetricsRecorder_Expecter) SetGauge(name interface{}, value interface{}, tags interface{}) *MockMetricsRecorder_SetGauge_Call {
	return &MockMetricsRecorder_SetGauge_Call{Call: _e.mock.On("SetGauge", name, value, tags)}
}

func (_c *MockMetricsRecorder_SetGauge_Call) Run(run func(name string, value float64, tags map[string]string)) *MockMetricsRecorder_SetGauge_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(float64), args[2].(map[string]string))
	})
	return _c
}

func (_c *MockMetricsRecorder_SetGauge_Call) Return() *MockMetricsRecorder_SetGauge_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMetricsRecorder_SetGauge_Call) RunAndReturn(run func(string, float64, map[string]string)) *MockMetricsRecorder_SetGauge_Call {
	_c.Run(run)
	return _c
}

// NewMockMetricsRecorder creates a new instance of MockMetricsRecorder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetricsRecorder(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetricsRecorder {
	mock := &MockMetricsRecorder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
